<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAqAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAmcd8mcd8mcd8mcd8mcd8mcd8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmcd8mcd8mcd8mcd8mcd8m
        cd8mcd8mcd8mcd8mcd8mcd8mcd8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAmcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8m
        cd8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmcd8mcd8mcd8m
        cd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA28vsAAAAAAAAmcd8mcd8mcd8mcd8mcd8mcd8AAAAAAAAAAAAmcd8mcd8m
        cd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA28vsAAAAm
        cd8mcd8mcd8mcd8AAAAAAAAAAAAAAAAmcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8A
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA28vs28vsAAAAmcd8mcd8mcd8mcd8AAAAmcd8AAAAAAAAm
        cd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8AAAAAAAAAAAAAAAAAAAAAAAAAAAA2
        8vs28vsAAAAAAAAmcd8mcd8mcd8mcd8mcd8mcd8mcd8AAAAAAAAmcd8mcd8mcd8mcd8mcd8mcd8mcd8m
        cd8mcd8mcd8mcd8mcd8AAAAAAAAAAAAAAAAAAAAAAAAAAAA28vs28vsAAAAmcd8mcd8mcd8mcd8mcd8m
        cd8mcd8mcd8AAAAAAAAmcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8AAAA28vsAAAAAAAAA
        AAAAAAAAAAA28vs28vs28vsAAAAmcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8m
        cd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8AAAA28vs28vsAAAAAAAAAAAAAAAA28vs28vs28vsAAAAmcd8m
        cd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8AAAA2
        8vs28vs28vsAAAAAAAAAAAAAAAA28vs28vs28vsAAAAmcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8m
        cd8mcd8mcd8AAAAAAAAmcd8mcd8mcd8mcd8mcd8AAAA28vs28vs28vs28vsAAAAAAAAAAAA28vs28vs2
        8vs28vsAAAAmcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8AAAAAAAAmcd8mcd8mcd8m
        cd8AAAA28vs28vs28vs28vs28vs28vsAAAAAAAA28vs28vs28vs28vsAAAAAAAAmcd8mcd8mcd8mcd8A
        AAAAAAAmcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8AAAA28vs28vs28vs28vs28vs28vsA
        AAAAAAA28vs28vs28vs28vs28vsAAAAmcd8mcd8mcd8mcd8AAAAAAAAmcd8mcd8mcd8mcd8mcd8mcd8m
        cd8mcd8mcd8mcd8mcd8mcd8AAAA28vs28vs28vs28vs28vsAAAAAAAA28vs28vs28vs28vs28vsAAAAm
        cd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd8mcd////////8mcd8AAAA28vs2
        8vs28vs28vs28vsAAAAAAAA28vs28vs28vs28vs28vsAAAAmcd8mcd////////////////8mcd8mcd8m
        cd8mcd8mcd8mcd8mcd////////////////8mcd8mcd8AAAA28vs28vs28vs28vsAAAAAAAA28vs28vs2
        8vs28vs28vsAAAAmcd8mcd////////////////8mcd8mcd8mcd8AAAAmcd8mcd8mcd8mcd//////////
        //////8mcd8AAAA28vs28vs28vs28vsAAAAAAAAAAAA28vs28vs28vs28vsAAAAmcd8mcd8mcd//////
        //////8mcd8mcd8mcd8AAAAAAAAAAAAmcd8mcd8mcd////////////8mcd8AAAA28vs28vs28vsAAAAA
        AAAAAAAAAAA28vs28vs28vs28vsAAAAAAAAmcd8mcd////////////8mcd8mcd8AAAAAAAA28vsAAAAA
        AAAmcd8mcd////////////8mcd8AAAA28vs28vs28vsAAAAAAAAAAAAAAAA28vs28vs28vs28vs28vsA
        AAAmcd8mcd////////////8mcd8mcd8AAAA28vs28vs28vsAAAAmcd8mcd////////////8mcd8AAAA2
        8vs28vs28vsAAAAAAAAAAAAAAAAAAAA28vs28vs28vs28vsAAAAAAAAmcd8mcd////////8mcd8mcd8A
        AAA28vs28vs28vsAAAAmcd8mcd8mcd////////8mcd8AAAA28vs28vsAAAAAAAAAAAAAAAAAAAAAAAA2
        8vs28vs28vs28vs28vsAAAAmcd8mcd////8mcd8mcd8mcd8AAAA28vs28vs28vsAAAAAAAAmcd8mcd//
        //8mcd8mcd8AAAA28vs28vsAAAAAAAAAAAAAAAAAAAAAAAAAAAA28vs28vs28vs28vsAAAAAAAAmcd//
        //8mcd8mcd8AAAAAAAA28vs28vs28vs28vsAAAAAAAAmcd8mcd8mcd8AAAA28vs28vsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA28vs28vs28vs28vsAAAAmcd8mcd8mcd8mcd8AAAA28vs28vs28vs28vs2
        8vs28vsAAAAAAAAmcd8AAAAAAAA28vsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA28vs28vs2
        8vs28vsAAAAmcd8mcd8mcd8mcd8AAAA28vs28vs28vs28vs28vs28vs28vsAAAAAAAAAAAA28vs28vsA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA28vs28vsAAAAAAAAAAAAmcd8mcd8AAAA2
        8vs28vs28vs28vs28vs28vs28vs28vs28vs28vsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA28vs28vs28vsAAAAAAAAAAAAAAAA28vs28vs28vs28vs28vs28vs28vs28vs2
        8vsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA28vs2
        8vs28vs28vs28vs28vs28vs28vs28vs28vs28vs28vsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA28vs28vs28vs28vs28vs28vsA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/+B///8AD//8AAP/+AAB/+AAAH/AAAA/wAAAP4AAAB8AAAAPAAAADgAAAAYAA
        AAGAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAYAAAAGAAAABwAAAA8AAAAPgAAAH8AAAD/AA
        AA/4AAAf/gAAf/8AAP//wAP///gf/w==
</value>
  </data>
</root>